{"ast":null,"code":"import axios from \"axios\";\nexport const API_URL = \"https://localhost:7055\";\nconst $api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('aToken')}`;\n  return config;\n});\nexport const getUserById = async userId => {\n  try {\n    let response = await $api.get(\"/User/GetUserById\", {\n      params: {\n        id: userId\n      }\n    });\n    return response;\n  } catch (e) {\n    console.error(e);\n  }\n};","map":{"version":3,"names":["axios","API_URL","$api","create","baseURL","withCredentials","interceptors","request","use","config","headers","Authorization","localStorage","getItem","getUserById","userId","response","get","params","id","e","console","error"],"sources":["C:/Users/sw1rl/Documents/Projects/cogni/CogniProject/CogniReact/src/services/userProfile.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nexport const API_URL = \"https://localhost:7055\";\r\n\r\nconst $api = axios.create({\r\n    baseURL: API_URL,\r\n    withCredentials: true,\r\n});\r\n\r\n$api.interceptors.request.use((config) => {\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem('aToken')}`\r\n    return config;\r\n});\r\n\r\n\r\nexport const getUserById = async (userId) => {\r\n    try {\r\n        let response = await $api.get(\"/User/GetUserById\", { params: { id: userId } });\r\n        return response;\r\n    } catch(e) {\r\n        console.error(e);\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAG,wBAAwB;AAE/C,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACtBC,OAAO,EAAEH,OAAO;EAChBI,eAAe,EAAE;AACrB,CAAC,CAAC;AAEFH,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACtCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;EACzE,OAAOJ,MAAM;AACjB,CAAC,CAAC;AAGF,OAAO,MAAMK,WAAW,GAAG,MAAOC,MAAM,IAAK;EACzC,IAAI;IACA,IAAIC,QAAQ,GAAG,MAAMd,IAAI,CAACe,GAAG,CAAC,mBAAmB,EAAE;MAAEC,MAAM,EAAE;QAAEC,EAAE,EAAEJ;MAAO;IAAE,CAAC,CAAC;IAC9E,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAMI,CAAC,EAAE;IACPC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}