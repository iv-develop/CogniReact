{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"https://localhost:7055\";\nconst $api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('aToken')}`;\n  config.headers[\"Refresh-Token\"] = `${localStorage.getItem('rToken')}`;\n  return config;\n});\nconst refreshAccessToken = async userId => {\n  try {\n    const userId = localStorage.getItem('userId');\n    const response = await $api.get(`${API_URL}/Token/Refresh`, {\n      params: {\n        id: userId\n      }\n    });\n    var aToken = response.data;\n    localStorage.setItem(\"aToken\", aToken);\n    return aToken;\n  } catch (error) {\n    console.error(\"Ошибка при обновлении токена:\", error);\n  }\n};\n$api.interceptors.response.use(config => {\n  return config;\n}, async error => {\n  const originalRequest = error.config;\n  if (error.response.status == 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const newAccessToken = await refreshAccessToken();\n      originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n      return $api.request(originalRequest);\n    } catch (e) {\n      console.error(\"Не удалось обновить токен. Переход на логин.\");\n    }\n  }\n});\nexport const getUserById = async userId => {\n  try {\n    let response = await $api.get(\"/User/GetUserById\", {\n      params: {\n        id: userId\n      }\n    });\n    console.log(response);\n    return response;\n  } catch (e) {\n    console.error();\n  }\n};\nexport const getUserPosts = async userId => {\n  try {\n    var URL = \"/Post/GetAllUserPost?id=\" + userId;\n    let response = await $api.post(URL);\n    return response;\n  } catch (e) {\n    console.error();\n  }\n};\nexport const getUserFriends = async userId => {\n  try {\n    var URL = \"/Friend/GetFriendsPreview?id=\" + userId;\n    let response = await $api.get(URL);\n    return response;\n  } catch (e) {\n    console.error();\n  }\n};\nexport const getUserFriendsAmount = async userId => {\n  try {\n    var URL = \"/Friend/GetNumOfFriends?id=\" + userId;\n    let response = await $api.get(URL);\n    return response;\n  } catch (e) {\n    console.error();\n  }\n};\nexport const createPost = async (postText, postImg) => {\n  try {\n    const post = {\n      postBody: postText,\n      postImages: postImg\n    };\n    let response = await $api.post(\"/Post/CreatePost\", post);\n    return response;\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"names":["axios","API_URL","$api","create","baseURL","withCredentials","interceptors","request","use","config","headers","Authorization","localStorage","getItem","refreshAccessToken","userId","response","get","params","id","aToken","data","setItem","error","console","originalRequest","status","_retry","newAccessToken","e","getUserById","log","getUserPosts","URL","post","getUserFriends","getUserFriendsAmount","createPost","postText","postImg","postBody","postImages"],"sources":["C:/Users/sw1rl/Documents/Projects/cogni/CogniReact/src/services/userProfile.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst API_URL = \"https://localhost:7055\";\r\n\r\nconst $api = axios.create({\r\n    baseURL: API_URL,\r\n    withCredentials: true,\r\n});\r\n\r\n$api.interceptors.request.use((config) => {\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem('aToken')}`\r\n    config.headers[\"Refresh-Token\"] = `${localStorage.getItem('rToken')}`\r\n    return config;\r\n});\r\n\r\nconst refreshAccessToken = async (userId) => {\r\n    try {\r\n        const userId = localStorage.getItem('userId');\r\n        const response = await $api.get(`${API_URL}/Token/Refresh`, { params: { id: userId} });\r\n        var aToken = response.data;\r\n        localStorage.setItem(\"aToken\", aToken);\r\n        return aToken;\r\n    } catch (error) {\r\n        console.error(\"Ошибка при обновлении токена:\", error);\r\n    }\r\n};\r\n\r\n$api.interceptors.response.use((config) => {\r\n    return config;\r\n}, async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response.status == 401 && !originalRequest._retry) {\r\n        originalRequest._retry = true;\r\n        try {\r\n            const newAccessToken = await refreshAccessToken();\r\n            originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n            return $api.request(originalRequest);\r\n        } catch (e) {\r\n            console.error(\"Не удалось обновить токен. Переход на логин.\");\r\n        }\r\n    }\r\n});\r\n\r\nexport const getUserById = async (userId) => {\r\n    try {\r\n        let response = await $api.get(\"/User/GetUserById\", { params: { id: userId } });\r\n        console.log(response);\r\n        return response;\r\n    } catch(e) {\r\n        console.error();\r\n    }\r\n}\r\n\r\nexport const getUserPosts = async (userId) => {\r\n    try {\r\n        var URL = \"/Post/GetAllUserPost?id=\" + userId;\r\n        let response = await $api.post(URL);\r\n        return response;\r\n    } catch(e) {\r\n        console.error();\r\n    }\r\n}\r\n\r\nexport const getUserFriends = async (userId) => {\r\n    try {\r\n        var URL = \"/Friend/GetFriendsPreview?id=\" + userId;\r\n        let response = await $api.get(URL);\r\n        return response;\r\n    } catch(e) {\r\n        console.error();\r\n    }\r\n}\r\n\r\nexport const getUserFriendsAmount = async (userId) => {\r\n    try {\r\n        var URL = \"/Friend/GetNumOfFriends?id=\" + userId;\r\n        let response = await $api.get(URL);\r\n        return response;\r\n    } catch(e) {\r\n        console.error();\r\n    }\r\n}\r\n\r\nexport const createPost = async (postText, postImg) => {\r\n    try {\r\n        const post = {\r\n            postBody: postText,\r\n            postImages: postImg\r\n        }\r\n        let response = await $api.post(\"/Post/CreatePost\", post);\r\n        return response;\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}