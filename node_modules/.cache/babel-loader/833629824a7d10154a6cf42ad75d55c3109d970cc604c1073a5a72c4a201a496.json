{"ast":null,"code":"import axios from \"axios\";\nexport const API_URL = \"https://localhost:7055\";\nconst $api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('aToken')}`;\n  return config;\n});\n$api.interceptors.response.use(config => {\n  return config;\n}, async error => {\n  const originalRequest = error.config;\n  if (error.response.status == 401) {\n    localStorage.removeItem('aToken');\n    const rToken = localStorage.getItem('rToken');\n    const userId = localStorage.getItem('userId');\n    if (rToken) {\n      try {\n        const refreshResponse = await axios.get(`${API_URL}/Token/Refresh`, {\n          params: {\n            token: rToken,\n            id: userId\n          }\n        });\n        localStorage.setItem('aToken', refreshResponse.data.aToken);\n        error.config.headers.Authorization = `Bearer ${refreshResponse.data.aToken}`;\n        return $api.request(error.config);\n      } catch (e) {\n        console.error(\"Не удалось обновить токен. Переход на логин.\");\n      }\n    }\n  }\n  console.log(error.config);\n});\nexport const getUserById = async userId => {\n  try {\n    let response = await $api.get(\"/User/GetUserById\", {\n      params: {\n        id: userId\n      }\n    });\n    return response;\n  } catch (e) {\n    console.error(1);\n  }\n};","map":{"version":3,"names":["axios","API_URL","$api","create","baseURL","withCredentials","interceptors","request","use","config","headers","Authorization","localStorage","getItem","response","error","originalRequest","status","removeItem","rToken","userId","refreshResponse","get","params","token","id","setItem","data","aToken","e","console","log","getUserById"],"sources":["C:/Users/sw1rl/Documents/Projects/cogni/CogniProject/CogniReact/src/services/userProfile.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nexport const API_URL = \"https://localhost:7055\";\r\n\r\nconst $api = axios.create({\r\n    baseURL: API_URL,\r\n    withCredentials: true,\r\n});\r\n\r\n$api.interceptors.request.use((config) => {\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem('aToken')}`\r\n    return config;\r\n});\r\n\r\n$api.interceptors.response.use((config) => {\r\n    return config;\r\n}, async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response.status == 401) {\r\n        localStorage.removeItem('aToken');\r\n\r\n        const rToken = localStorage.getItem('rToken');\r\n        const userId = localStorage.getItem('userId');\r\n        if (rToken) {\r\n            try {\r\n                const refreshResponse = await axios.get(`${API_URL}/Token/Refresh`, { params: {token: rToken, id: userId} });\r\n                localStorage.setItem('aToken', refreshResponse.data.aToken);\r\n                error.config.headers.Authorization = `Bearer ${refreshResponse.data.aToken}`;\r\n                return $api.request(error.config);\r\n            } catch (e) {\r\n                console.error(\"Не удалось обновить токен. Переход на логин.\");\r\n            }\r\n        }\r\n    }\r\n    console.log(error.config);\r\n});\r\n\r\nexport const getUserById = async (userId) => {\r\n    try {\r\n        let response = await $api.get(\"/User/GetUserById\", { params: { id: userId } });\r\n        return response;\r\n    } catch(e) {\r\n        console.error(1);\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAG,wBAAwB;AAE/C,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACtBC,OAAO,EAAEH,OAAO;EAChBI,eAAe,EAAE;AACrB,CAAC,CAAC;AAEFH,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACtCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;EACzE,OAAOJ,MAAM;AACjB,CAAC,CAAC;AAEFP,IAAI,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAAEC,MAAM,IAAK;EACvC,OAAOA,MAAM;AACjB,CAAC,EAAE,MAAOM,KAAK,IAAK;EAChB,MAAMC,eAAe,GAAGD,KAAK,CAACN,MAAM;EACpC,IAAIM,KAAK,CAACD,QAAQ,CAACG,MAAM,IAAI,GAAG,EAAE;IAC9BL,YAAY,CAACM,UAAU,CAAC,QAAQ,CAAC;IAEjC,MAAMC,MAAM,GAAGP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMO,MAAM,GAAGR,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,IAAIM,MAAM,EAAE;MACR,IAAI;QACA,MAAME,eAAe,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,GAAGrB,OAAO,gBAAgB,EAAE;UAAEsB,MAAM,EAAE;YAACC,KAAK,EAAEL,MAAM;YAAEM,EAAE,EAAEL;UAAM;QAAE,CAAC,CAAC;QAC5GR,YAAY,CAACc,OAAO,CAAC,QAAQ,EAAEL,eAAe,CAACM,IAAI,CAACC,MAAM,CAAC;QAC3Db,KAAK,CAACN,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAAUU,eAAe,CAACM,IAAI,CAACC,MAAM,EAAE;QAC5E,OAAO1B,IAAI,CAACK,OAAO,CAACQ,KAAK,CAACN,MAAM,CAAC;MACrC,CAAC,CAAC,OAAOoB,CAAC,EAAE;QACRC,OAAO,CAACf,KAAK,CAAC,8CAA8C,CAAC;MACjE;IACJ;EACJ;EACAe,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACN,MAAM,CAAC;AAC7B,CAAC,CAAC;AAEF,OAAO,MAAMuB,WAAW,GAAG,MAAOZ,MAAM,IAAK;EACzC,IAAI;IACA,IAAIN,QAAQ,GAAG,MAAMZ,IAAI,CAACoB,GAAG,CAAC,mBAAmB,EAAE;MAAEC,MAAM,EAAE;QAAEE,EAAE,EAAEL;MAAO;IAAE,CAAC,CAAC;IAC9E,OAAON,QAAQ;EACnB,CAAC,CAAC,OAAMe,CAAC,EAAE;IACPC,OAAO,CAACf,KAAK,CAAC,CAAC,CAAC;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}