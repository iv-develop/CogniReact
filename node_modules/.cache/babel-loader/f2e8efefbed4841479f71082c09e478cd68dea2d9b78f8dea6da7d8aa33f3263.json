{"ast":null,"code":"import axios from \"axios\";\nexport const createUser = async user => {\n  try {\n    var response = await axios.post(\"https://localhost:7055/User/CreateUser\", user);\n    return response.status;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\n//Валидация\nexport const isFormValid = user => {\n  var reply = {\n    status: true,\n    name: null,\n    surname: null,\n    email: null,\n    password: null,\n    passwordRepeat: null\n  };\n  if (!validateName(user === null || user === void 0 ? void 0 : user.name)) {\n    reply.name = \"Имя должно начинаться с заглавной буквы, быть написано на русском и содержать минимум 2 символа\";\n    reply.status = false;\n  }\n  if (!validateSurname(user === null || user === void 0 ? void 0 : user.surname)) {\n    reply.surname = \"Фамилия должна начинаться с заглавной буквы, быть написано на русском и содержать минимум 2 символа\";\n    reply.status = false;\n  }\n  if (!validateEmail(user === null || user === void 0 ? void 0 : user.email)) {\n    reply.email = \"Email указан не верно\";\n    reply.status = false;\n  }\n  if (!validatePassword(user === null || user === void 0 ? void 0 : user.password)) {\n    reply.password = \"Пароль должен состоять минимум из 8 символов и содержать хотя бы одну цифру/букву и также хотябы один из символов: !@#$%^&*\";\n    reply.status = false;\n  }\n  if (!validatePasswordRepeat(user === null || user === void 0 ? void 0 : user.password, user === null || user === void 0 ? void 0 : user.passwordRepeat)) {\n    reply.password = \"Пароли не совпадают\";\n    reply.status = false;\n  }\n  return reply;\n};\n\n//Валидация имени\nconst validateName = name => {\n  var re = /^[\\u0400-\\u04FF]+$/;\n  return re.test(name) && name[0] == name[0].toUpperCase();\n};\n\n//Валидация Фамилии\nconst validateSurname = surname => {\n  var re = /^[\\u0400-\\u04FF]+$/;\n  return re.test(surname) && surname[0] == surname[0].toUpperCase();\n};\n\n//Валидация email\nconst validateEmail = email => {\n  return email.match(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n};\n\n//Валидация password\nconst validatePassword = password => {\n  var re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-zA-Z]).{8,}$/;\n  return re.test(password);\n};\n\n//Проверка повтора пароля\nconst validatePasswordRepeat = (password, passwordRepeat) => {\n  return password == passwordRepeat;\n};","map":{"version":3,"names":["axios","createUser","user","response","post","status","e","console","error","isFormValid","reply","name","surname","email","password","passwordRepeat","validateName","validateSurname","validateEmail","validatePassword","validatePasswordRepeat","re","test","toUpperCase","match"],"sources":["C:/Users/sw1rl/Documents/Projects/cogni/CogniProject/CogniReact/src/services/auth.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nexport const createUser = async (user) => {\r\n    try {\r\n        var response = await axios.post(\"https://localhost:7055/User/CreateUser\", user);\r\n\r\n        return response.status;\r\n    } catch(e) {\r\n        console.error(e);\r\n    }\r\n}\r\n\r\n//Валидация\r\nexport const isFormValid = (user) => {\r\n    var reply = {status: true, name: null, surname: null, email: null, password: null, passwordRepeat: null};\r\n\r\n    if (!validateName(user?.name)) {\r\n        reply.name = \"Имя должно начинаться с заглавной буквы, быть написано на русском и содержать минимум 2 символа\";\r\n        reply.status = false;\r\n    }\r\n    if (!validateSurname(user?.surname)) {\r\n        reply.surname = \"Фамилия должна начинаться с заглавной буквы, быть написано на русском и содержать минимум 2 символа\";\r\n        reply.status = false;\r\n    }\r\n    if (!validateEmail(user?.email)) {\r\n        reply.email = \"Email указан не верно\";\r\n        reply.status = false;\r\n    }\r\n    if (!validatePassword(user?.password)) {\r\n        reply.password = \"Пароль должен состоять минимум из 8 символов и содержать хотя бы одну цифру/букву и также хотябы один из символов: !@#$%^&*\";\r\n        reply.status = false;\r\n    }\r\n    if (!validatePasswordRepeat(user?.password, user?.passwordRepeat)) {\r\n        reply.password = \"Пароли не совпадают\";\r\n        reply.status = false;\r\n    }\r\n    return reply;\r\n};\r\n\r\n\r\n//Валидация имени\r\nconst validateName = (name) => {\r\n    var re = /^[\\u0400-\\u04FF]+$/;\r\n    return re.test(name) && name[0] == name[0].toUpperCase();\r\n};\r\n\r\n//Валидация Фамилии\r\nconst validateSurname = (surname) => {\r\n    var re = /^[\\u0400-\\u04FF]+$/;\r\n    return re.test(surname) && surname[0] == surname[0].toUpperCase();\r\n};\r\n\r\n//Валидация email\r\nconst validateEmail = (email) => {\r\n    return email.match(\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n};\r\n\r\n//Валидация password\r\nconst validatePassword = (password) => {\r\n    var re = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-zA-Z]).{8,}$/;\r\n    return re.test(password);\r\n};\r\n\r\n//Проверка повтора пароля\r\nconst validatePasswordRepeat = (password, passwordRepeat) => {\r\n    return password == passwordRepeat;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,IAAI;IACA,IAAIC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,wCAAwC,EAAEF,IAAI,CAAC;IAE/E,OAAOC,QAAQ,CAACE,MAAM;EAC1B,CAAC,CAAC,OAAMC,CAAC,EAAE;IACPC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;EACpB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAIP,IAAI,IAAK;EACjC,IAAIQ,KAAK,GAAG;IAACL,MAAM,EAAE,IAAI;IAAEM,IAAI,EAAE,IAAI;IAAEC,OAAO,EAAE,IAAI;IAAEC,KAAK,EAAE,IAAI;IAAEC,QAAQ,EAAE,IAAI;IAAEC,cAAc,EAAE;EAAI,CAAC;EAExG,IAAI,CAACC,YAAY,CAACd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,IAAI,CAAC,EAAE;IAC3BD,KAAK,CAACC,IAAI,GAAG,iGAAiG;IAC9GD,KAAK,CAACL,MAAM,GAAG,KAAK;EACxB;EACA,IAAI,CAACY,eAAe,CAACf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,OAAO,CAAC,EAAE;IACjCF,KAAK,CAACE,OAAO,GAAG,qGAAqG;IACrHF,KAAK,CAACL,MAAM,GAAG,KAAK;EACxB;EACA,IAAI,CAACa,aAAa,CAAChB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,KAAK,CAAC,EAAE;IAC7BH,KAAK,CAACG,KAAK,GAAG,uBAAuB;IACrCH,KAAK,CAACL,MAAM,GAAG,KAAK;EACxB;EACA,IAAI,CAACc,gBAAgB,CAACjB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,QAAQ,CAAC,EAAE;IACnCJ,KAAK,CAACI,QAAQ,GAAG,6HAA6H;IAC9IJ,KAAK,CAACL,MAAM,GAAG,KAAK;EACxB;EACA,IAAI,CAACe,sBAAsB,CAAClB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,QAAQ,EAAEZ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,cAAc,CAAC,EAAE;IAC/DL,KAAK,CAACI,QAAQ,GAAG,qBAAqB;IACtCJ,KAAK,CAACL,MAAM,GAAG,KAAK;EACxB;EACA,OAAOK,KAAK;AAChB,CAAC;;AAGD;AACA,MAAMM,YAAY,GAAIL,IAAI,IAAK;EAC3B,IAAIU,EAAE,GAAG,oBAAoB;EAC7B,OAAOA,EAAE,CAACC,IAAI,CAACX,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACY,WAAW,CAAC,CAAC;AAC5D,CAAC;;AAED;AACA,MAAMN,eAAe,GAAIL,OAAO,IAAK;EACjC,IAAIS,EAAE,GAAG,oBAAoB;EAC7B,OAAOA,EAAE,CAACC,IAAI,CAACV,OAAO,CAAC,IAAIA,OAAO,CAAC,CAAC,CAAC,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACW,WAAW,CAAC,CAAC;AACrE,CAAC;;AAED;AACA,MAAML,aAAa,GAAIL,KAAK,IAAK;EAC7B,OAAOA,KAAK,CAACW,KAAK,CAChB,2JACF,CAAC;AACL,CAAC;;AAED;AACA,MAAML,gBAAgB,GAAIL,QAAQ,IAAK;EACnC,IAAIO,EAAE,GAAG,+CAA+C;EACxD,OAAOA,EAAE,CAACC,IAAI,CAACR,QAAQ,CAAC;AAC5B,CAAC;;AAED;AACA,MAAMM,sBAAsB,GAAGA,CAACN,QAAQ,EAAEC,cAAc,KAAK;EACzD,OAAOD,QAAQ,IAAIC,cAAc;AACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}